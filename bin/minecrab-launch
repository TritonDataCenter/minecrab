#!/usr/bin/env bash
# -*- mode: shell-script; fill-column: 80; -*-
#
# Copyright (c) 2013 Joyent Inc., All rights reserved.
#


source $(dirname $0)/common.sh
USER_SCRIPT=$(dirname $0)/../scripts/bootstrap.sh
FLAVORS=("minecraft" "craftbukkit" "ftb_ultimate" "voltz")

usage() {
    echo "Usage: $0 [-p first-player] [-f flavor] <server-name>" 1>&2;
    echo "Valid flavors: ${FLAVORS[@]}" 1>&2
    exit 1;
}

while getopts ":f:p:" o; do
    case "${o}" in
        f)
            FLAVOR=${OPTARG}
            ;;
        p)
            ME=${OPTARG}
            ;;
        *)
            usage
            ;;
    esac
done
shift $((OPTIND-1))

SERVER_NAME=$1

if [ -z $SERVER_NAME ]; then
    usage
fi

#Check for valid flavors...
if [ ! -z $FLAVOR ]; then
    if [ $(contains "${FLAVORS[@]}" "$FLAVOR") == "n" ]; then
	echo "$FLAVOR is not a valid minecraft flavor."
	usage
    fi
fi

IMAGEID=17c98640-1fdb-11e3-bf51-3708ce78e75a
#    {
#        "id": "17c98640-1fdb-11e3-bf51-3708ce78e75a",
#        "name": "base64",
#        "version": "13.2.1",
#        "os": "smartos",
#        "requirements": {},
#        "type": "smartmachine",
#        "description": "A 64-bit SmartOS image with just essential packages installed. Ideal for users who are comfortable with setting up their own environment and tools.",
#        "urn": "sdc:sdc:base64:13.2.1"
#    }

PACKAGENAME=g3-standard-4-smartos-image-creation
#    {
#        "name": "g3-standard-4-smartos-image-creation",
#        "memory": 4096,
#        "disk": 134144,
#        "swap": 8192,
#        "vcpus": 0,
#        "default": "false",
#        "id": "9c1948c0-0c37-11e3-be34-5780f9789210",
#        "version": "1.0.0",
#        "description": "4GB RAM, 1 CPUs and bursting, and 131GB Disk. Required for Image Creation.",
#        "group": "Image Creation"
#    }

# Check if $SERVER_NAME already exists

if [[ $(sdc-listmachines --tag "minecrab=${SERVER_NAME}") != "[]" ]]; then
    fatal "${SERVER_NAME} already exists. Choose another name."
fi

echo -n "Launching ${SERVER_NAME}..."
SERVER_ID=$(sdc-createmachine --dataset $IMAGEID \
                              --package $PACKAGENAME \
                              --tag "minecrab=${SERVER_NAME}" | json id)
if [ -z $SERVER_ID ] ; then
    fatal "Can't provision."
fi

while [[ $(sdc-getmachine $SERVER_ID | json state) == "provisioning" ]]; do
    echo -n "."
    sleep 1
done

echo " Done!"

IP=$(sdc-getmachine $SERVER_ID | json primaryIp)

echo "Server ${SERVER_NAME} running on ${IP} id: $SERVER_ID"
echo "Setting up..."
server_execute 'echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config'
server_execute "echo -e \"export MANTA_USER=$MANTA_USER\nexport MANTA_KEY_ID=$MANTA_KEY_ID\nexport MANTA_URL=https://us-east.manta.joyent.com\" >> ~/.bashrc"
echo "Installing git..."
server_execute "pkgin -y in scmgit"
echo "Cloning repo..."
server_execute "cd /opt && git clone git@github.com:joyent/minecrab.git"
echo "Installing server..."
server_execute "cd /opt && minecrab/scripts/install.sh $FLAVOR"

echo "Uploading website to $MANTA_LOCATION..."
upload_website

echo "Uploading server information..."
mmkdir -p $SERVERS_LOCATION/$SERVER_NAME
echo $IP | mput $SERVERS_LOCATION/$SERVER_NAME/ip

#We keep this towards the end so that the minecraft server has some time
# to start up before giving it commands.
if [ ! -z "$ME" ]; then
    echo "Adding $ME to whitelist..."
    server_console "whitelist add ${ME}"
fi

echo "Connect to server at ${IP}!"
