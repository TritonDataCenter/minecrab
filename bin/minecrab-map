#!/usr/bin/env bash
# -*- mode: shell-script; fill-column: 80; -*-
#
# Copyright (c) 2013 Joyent Inc., All rights reserved.
#

#set -x trace
#DEBUG="yes please"

source $(dirname $0)/common.sh

usage() { echo "Usage: $0 <server-name>" 1>&2; exit 1; }

if [ "$#" -ne 1 ]; then
    usage
fi

SERVER_NAME=$1

JOB_NAME="minecrab-map-$SERVER_NAME"

echo "Finding server..."
find_server $SERVER_NAME

if [ "$STATUS" == "notfound" ]; then
    fatal "Unable to find $SERVER_NAME server."
fi

if [ "$STATUS" == "online" ]; then
    echo "Taking latest backup of $SERVER_NAME..."
    server_execute "/opt/minecrab/scripts/backup.sh"
    if [[ $? -ne 0 ]]; then
        fatal "Was unable to backup your running server."
    fi
    echo "Running map command from $SERVER_NAME..."
    server_execute "/opt/minecrab/scripts/map.sh"
    echo "$RESULT"
    exit 0
fi

#TODO: Unfortunately, this is duplicated  We'll have to refactor it into
# some common thing at some point.
echo "Checking if a job is already running..."
JOB_ID=$(mjob list -s running -n "$JOB_NAME" | tr -d "/")
if [ ! -z "$JOB_ID" ]; then
    fatal "Job already running with id $JOB_ID..."
fi

echo "Looking for $MANTA_OBJECT..."
WORLD_FOUND=$(mls $MANTA_OBJECT 2>/dev/null)
if [ -z "$WORLD_FOUND" ]; then
    fatal "Didn't find the latest backup for $SERVER_NAME."
fi

#This is pretty horrible... but it works for now :/
GITHUB_R=$(echo $GITHUB_REPO | cut -d ':' -f 2)
GITHUB_PATH_PART=${GITHUB_R%.*}
if [[ -z $GITHUB_PATH_PART ]]; then
    fatal "Unable to determine github path for render script."
fi
INIT_SCRIPT="https://raw.github.com/${GITHUB_PATH_PART}/master/scripts/prepare_render.sh"

echo "Kicking off job..."
MANTA_REQ_UUID=$(\
    echo "$MANTA_OBJECT" | mjob create \
    --memory=4096 \
    --init "curl -L $INIT_SCRIPT | sh | tee /init.log" \
    --name "$JOB_NAME" \
    -m '/render.sh | tee /render.log' \
    )

echo "Job $MANTA_REQ_UUID running!"
